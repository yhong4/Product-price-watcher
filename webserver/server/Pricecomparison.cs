// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pricecomparison.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msyrpc {

  /// <summary>Holder for reflection information generated from pricecomparison.proto</summary>
  public static partial class PricecomparisonReflection {

    #region Descriptor
    /// <summary>File descriptor for pricecomparison.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PricecomparisonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwcmljZWNvbXBhcmlzb24ucHJvdG8SBm1zeXJwYyI0CgpDb21wZXRpdG9y",
            "EgoKAmlkGAEgASgFEgwKBG5hbWUYAiABKAkSDAoEdGllchgDIAEoCSIkCghD",
            "YXRlZ29yeRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIgASgJIi4KD0NvbXBldGl0",
            "b3JQcmljZRIMCgRuYW1lGAEgASgJEg0KBXByaWNlGAIgASgBIrIBCgdQcm9k",
            "dWN0EgoKAmlkGAEgASgFEhMKC3Byb2R1Y3RDb2RlGAIgASgJEhoKEnByb2R1",
            "Y3REZXNjcmlwdGlvbhgDIAEoCRIQCghrZXl3b3JkcxgEIAEoCRIRCgljb3N0",
            "UHJpY2UYBSABKAESEgoKc2FsZXNQcmljZRgGIAEoARIxChBjb21wZXRpdG9y",
            "UHJpY2VzGAcgAygLMhcubXN5cnBjLkNvbXBldGl0b3JQcmljZSIcChpHZXRB",
            "bGxDYXRlZ29yeVR5cGVzUmVxdWVzdCIeChxHZXRBbGxDb21wZXRpdG9yVHlw",
            "ZXNSZXF1ZXN0Ih8KHUdldEFsbE5ld0NhdGVnb3J5VHlwZXNSZXF1ZXN0Ik4K",
            "G0dldFByb2R1Y3RDb21wYXJpc29uUmVxdWVzdBIVCg1jYXRlZ29yeVR5cGVz",
            "GAEgAygFEhgKEGNvbXBldGl0b3JzVHlwZXMYAiADKAUiUgofVXBkYXRlUHJv",
            "ZHVjdERlc2NyaXB0aW9uUmVxdWVzdBITCgtwcm9kdWN0Q29kZRgBIAEoCRIa",
            "ChJ1cGRhdGVkRGVzY3JpcHRpb24YAiABKAkiPAoMQ2F0ZWdvcnlEYXRhEgwK",
            "BHR5cGUYASABKAkSHgoEZGF0YRgCIAMoCzIQLm1zeXJwYy5DYXRlZ29yeSJF",
            "ChtBbGxOZXdDYXRlZ29yeVR5cGVzUmVzcG9uc2USJgoIY2F0ZWdvcnkYASAD",
            "KAsyFC5tc3lycGMuQ2F0ZWdvcnlEYXRhIpICChhBbGxDYXRlZ29yeVR5cGVz",
            "UmVzcG9uc2USJwoNY2F0ZWdvcnlEYWlseRgBIAMoCzIQLm1zeXJwYy5DYXRl",
            "Z29yeRIzChljYXRlZ29yeU1vbmRheUFuZFRodXJzZGF5GAIgAygLMhAubXN5",
            "cnBjLkNhdGVnb3J5EjIKGGNhdGVnb3J5VHVlc2RheUFuZEZyaWRheRgDIAMo",
            "CzIQLm1zeXJwYy5DYXRlZ29yeRI2ChxjYXRlZ29yeVdlZG5lc2RheUFuZFNh",
            "dHVyZGF5GAQgAygLMhAubXN5cnBjLkNhdGVnb3J5EiwKEmNhdGVnb3J5VW5h",
            "c3NpZ25lZBgFIAMoCzIQLm1zeXJwYy5DYXRlZ29yeSJ8ChpBbGxDb21wZXRp",
            "dG9yVHlwZXNSZXNwb25zZRIuChJjb21wZXRpdG9yc1RpZXJPbmUYASADKAsy",
            "Ei5tc3lycGMuQ29tcGV0aXRvchIuChJjb21wZXRpdG9yc1RpZXJUd28YAiAD",
            "KAsyEi5tc3lycGMuQ29tcGV0aXRvciJHChlQcm9kdWN0Q29tcGFyaXNvblJl",
            "c3BvbnNlEioKEXByb2R1Y3RDb21wYXJpc29uGAEgAygLMg8ubXN5cnBjLlBy",
            "b2R1Y3QiMgogVXBkYXRlUHJvZHVjdERlc2NyaXB0aW9uUmVzcG9uc2USDgoG",
            "c3RhdHVzGAEgASgJIj4KEVVwZGF0ZWRDb21wZXRpdG9yEhQKDGNvbXBldGl0",
            "b3JJZBgBIAEoBRITCgt1cGRhdGVkVGllchgCIAEoCSJTChtVcGRhdGVDb21w",
            "ZXRpdG9yVGllclJlcXVlc3QSNAoRdXBkYXRlZENvbXBldGl0b3IYASADKAsy",
            "GS5tc3lycGMuVXBkYXRlZENvbXBldGl0b3IiLwoXRGVsZXRlQ29tcGV0aXRv",
            "clJlcXVlc3QSFAoMY29tcGV0aXRvcklkGAEgASgFIjIKFEFkZENvbXBldGl0",
            "b3JSZXF1ZXN0EgwKBG5hbWUYASABKAkSDAoEdGllchgCIAEoCSIuChxVcGRh",
            "dGVDb21wZXRpdG9yVGllclJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCSIqChhE",
            "ZWxldGVDb21wZXRpdG9yUmVzcG9uc2USDgoGc3RhdHVzGAEgASgJIicKFUFk",
            "ZENvbXBldGl0b3JSZXNwb25zZRIOCgZzdGF0dXMYASABKAkiOwoNU3RhdGVD",
            "YXRlZ29yeRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIgASgJEhAKCGNhdGVnb3J5",
            "GAMgASgJIk4KGlVwZGF0ZUNhdGVnb3J5U3RhdGVSZXF1ZXN0EjAKEXVwZGF0",
            "ZWRDYXRlZ29yaWVzGAEgAygLMhUubXN5cnBjLlN0YXRlQ2F0ZWdvcnkiLQob",
            "VXBkYXRlQ2F0ZWdvcnlTdGF0ZVJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoCSIe",
            "ChxBbGxTdGF0ZUNhdGVnb3J5VHlwZXNSZXF1ZXN0IrACCh1BbGxTdGF0ZUNh",
            "dGVnb3J5VHlwZXNSZXNwb25zZRIsCg1jYXRlZ29yeURhaWx5GAEgAygLMhUu",
            "bXN5cnBjLlN0YXRlQ2F0ZWdvcnkSOAoZY2F0ZWdvcnlNb25kYXlBbmRUaHVy",
            "c2RheRgCIAMoCzIVLm1zeXJwYy5TdGF0ZUNhdGVnb3J5EjcKGGNhdGVnb3J5",
            "VHVlc2RheUFuZEZyaWRheRgDIAMoCzIVLm1zeXJwYy5TdGF0ZUNhdGVnb3J5",
            "EjsKHGNhdGVnb3J5V2VkbmVzZGF5QW5kU2F0dXJkYXkYBCADKAsyFS5tc3ly",
            "cGMuU3RhdGVDYXRlZ29yeRIxChJjYXRlZ29yeVVuYXNzaWduZWQYBSADKAsy",
            "FS5tc3lycGMuU3RhdGVDYXRlZ29yeSI8Cg5DYXRlZ29yeU1hcmdpbhIOCgZ0",
            "YXJnZXQYASABKAISDQoFc3RhcnQYAiABKAUSCwoDZW5kGAMgASgFIhoKGEdl",
            "dENhdGVnb3J5TWFyZ2luUmVxdWVzdCJhCh1HZXRDYXRlZ29yeU1hcmdpblJl",
            "c3BvbnNlSXRlbRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIgASgJEiYKBm1hcmdp",
            "bhgDIAEoCzIWLm1zeXJwYy5DYXRlZ29yeU1hcmdpbiJbChlHZXRDYXRlZ29y",
            "eU1hcmdpblJlc3BvbnNlEj4KD2NhdGVnb3J5TWFyZ2lucxgBIAMoCzIlLm1z",
            "eXJwYy5HZXRDYXRlZ29yeU1hcmdpblJlc3BvbnNlSXRlbSJ4ChhBZGRDYXRl",
            "Z29yeU1hcmdpblJlcXVlc3QSEAoIY2F0ZWdvcnkYASABKAkSFwoPcHJpY2VS",
            "YW5nZVN0YXJ0GAIgASgFEhUKDXByaWNlUmFuZ2VFbmQYAyABKAUSDgoGbWFy",
            "Z2luGAQgASgCEgoKAmlkGAUgASgFIisKGUFkZENhdGVnb3J5TWFyZ2luUmVz",
            "cG9uc2USDgoGc3RhdHVzGAEgASgJIikKG0RlbGV0ZUNhdGVnb3J5TWFyZ2lu",
            "UmVxdWVzdBIKCgJpZBgBIAEoBSIuChxEZWxldGVDYXRlZ29yeU1hcmdpblJl",
            "c3BvbnNlEg4KBnN0YXR1cxgBIAEoCTL9CgoWUHJpY2VDb21wYXJpc29uU2Vy",
            "dmljZRJfChdHZXRBbGxQcm9kdWN0Q2F0ZWdvcmllcxIiLm1zeXJwYy5HZXRB",
            "bGxDYXRlZ29yeVR5cGVzUmVxdWVzdBogLm1zeXJwYy5BbGxDYXRlZ29yeVR5",
            "cGVzUmVzcG9uc2USZAoWR2V0QWxsTmV3Q2F0ZWdvcnlUeXBlcxIlLm1zeXJw",
            "Yy5HZXRBbGxOZXdDYXRlZ29yeVR5cGVzUmVxdWVzdBojLm1zeXJwYy5BbGxO",
            "ZXdDYXRlZ29yeVR5cGVzUmVzcG9uc2USXQoRR2V0QWxsQ29tcGV0aXRvcnMS",
            "JC5tc3lycGMuR2V0QWxsQ29tcGV0aXRvclR5cGVzUmVxdWVzdBoiLm1zeXJw",
            "Yy5BbGxDb21wZXRpdG9yVHlwZXNSZXNwb25zZRJsCiJHZXRMb2FkUHJvZHVj",
            "dENvbXBhcmlzb25JbmZvbWF0aW9uEiMubXN5cnBjLkdldFByb2R1Y3RDb21w",
            "YXJpc29uUmVxdWVzdBohLm1zeXJwYy5Qcm9kdWN0Q29tcGFyaXNvblJlc3Bv",
            "bnNlEnQKKkdldExvYWRGaWx0ZXJlZFByb2R1Y3RDb21wYXJpc29uSW5mb21h",
            "dGlvbhIjLm1zeXJwYy5HZXRQcm9kdWN0Q29tcGFyaXNvblJlcXVlc3QaIS5t",
            "c3lycGMuUHJvZHVjdENvbXBhcmlzb25SZXNwb25zZRJtChhVcGRhdGVQcm9k",
            "dWN0RGVzY3JpcHRpb24SJy5tc3lycGMuVXBkYXRlUHJvZHVjdERlc2NyaXB0",
            "aW9uUmVxdWVzdBooLm1zeXJwYy5VcGRhdGVQcm9kdWN0RGVzY3JpcHRpb25S",
            "ZXNwb25zZRJhChRVcGRhdGVDb21wZXRpdG9yVGllchIjLm1zeXJwYy5VcGRh",
            "dGVDb21wZXRpdG9yVGllclJlcXVlc3QaJC5tc3lycGMuVXBkYXRlQ29tcGV0",
            "aXRvclRpZXJSZXNwb25zZRJVChBEZWxldGVDb21wZXRpdG9yEh8ubXN5cnBj",
            "LkRlbGV0ZUNvbXBldGl0b3JSZXF1ZXN0GiAubXN5cnBjLkRlbGV0ZUNvbXBl",
            "dGl0b3JSZXNwb25zZRJMCg1BZGRDb21wZXRpdG9yEhwubXN5cnBjLkFkZENv",
            "bXBldGl0b3JSZXF1ZXN0Gh0ubXN5cnBjLkFkZENvbXBldGl0b3JSZXNwb25z",
            "ZRJrChxHZXRBbGxTdGF0ZVByb2R1Y3RDYXRlZ29yaWVzEiQubXN5cnBjLkFs",
            "bFN0YXRlQ2F0ZWdvcnlUeXBlc1JlcXVlc3QaJS5tc3lycGMuQWxsU3RhdGVD",
            "YXRlZ29yeVR5cGVzUmVzcG9uc2USXgoTVXBkYXRlQ2F0ZWdvcnlTdGF0ZRIi",
            "Lm1zeXJwYy5VcGRhdGVDYXRlZ29yeVN0YXRlUmVxdWVzdBojLm1zeXJwYy5V",
            "cGRhdGVDYXRlZ29yeVN0YXRlUmVzcG9uc2USWAoRR2V0Q2F0ZWdvcnlNYXJn",
            "aW4SIC5tc3lycGMuR2V0Q2F0ZWdvcnlNYXJnaW5SZXF1ZXN0GiEubXN5cnBj",
            "LkdldENhdGVnb3J5TWFyZ2luUmVzcG9uc2USWAoRQWRkQ2F0ZWdvcnlNYXJn",
            "aW4SIC5tc3lycGMuQWRkQ2F0ZWdvcnlNYXJnaW5SZXF1ZXN0GiEubXN5cnBj",
            "LkFkZENhdGVnb3J5TWFyZ2luUmVzcG9uc2USYQoURGVsZXRlQ2F0ZWdvcnlN",
            "YXJnaW4SIy5tc3lycGMuRGVsZXRlQ2F0ZWdvcnlNYXJnaW5SZXF1ZXN0GiQu",
            "bXN5cnBjLkRlbGV0ZUNhdGVnb3J5TWFyZ2luUmVzcG9uc2VCEAoOYXUuY29t",
            "Lm1zeS5ycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.Competitor), global::Msyrpc.Competitor.Parser, new[]{ "Id", "Name", "Tier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.Category), global::Msyrpc.Category.Parser, new[]{ "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.CompetitorPrice), global::Msyrpc.CompetitorPrice.Parser, new[]{ "Name", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.Product), global::Msyrpc.Product.Parser, new[]{ "Id", "ProductCode", "ProductDescription", "Keywords", "CostPrice", "SalesPrice", "CompetitorPrices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetAllCategoryTypesRequest), global::Msyrpc.GetAllCategoryTypesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetAllCompetitorTypesRequest), global::Msyrpc.GetAllCompetitorTypesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetAllNewCategoryTypesRequest), global::Msyrpc.GetAllNewCategoryTypesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetProductComparisonRequest), global::Msyrpc.GetProductComparisonRequest.Parser, new[]{ "CategoryTypes", "CompetitorsTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdateProductDescriptionRequest), global::Msyrpc.UpdateProductDescriptionRequest.Parser, new[]{ "ProductCode", "UpdatedDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.CategoryData), global::Msyrpc.CategoryData.Parser, new[]{ "Type", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AllNewCategoryTypesResponse), global::Msyrpc.AllNewCategoryTypesResponse.Parser, new[]{ "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AllCategoryTypesResponse), global::Msyrpc.AllCategoryTypesResponse.Parser, new[]{ "CategoryDaily", "CategoryMondayAndThursday", "CategoryTuesdayAndFriday", "CategoryWednesdayAndSaturday", "CategoryUnassigned" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AllCompetitorTypesResponse), global::Msyrpc.AllCompetitorTypesResponse.Parser, new[]{ "CompetitorsTierOne", "CompetitorsTierTwo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.ProductComparisonResponse), global::Msyrpc.ProductComparisonResponse.Parser, new[]{ "ProductComparison" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdateProductDescriptionResponse), global::Msyrpc.UpdateProductDescriptionResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdatedCompetitor), global::Msyrpc.UpdatedCompetitor.Parser, new[]{ "CompetitorId", "UpdatedTier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdateCompetitorTierRequest), global::Msyrpc.UpdateCompetitorTierRequest.Parser, new[]{ "UpdatedCompetitor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.DeleteCompetitorRequest), global::Msyrpc.DeleteCompetitorRequest.Parser, new[]{ "CompetitorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AddCompetitorRequest), global::Msyrpc.AddCompetitorRequest.Parser, new[]{ "Name", "Tier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdateCompetitorTierResponse), global::Msyrpc.UpdateCompetitorTierResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.DeleteCompetitorResponse), global::Msyrpc.DeleteCompetitorResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AddCompetitorResponse), global::Msyrpc.AddCompetitorResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.StateCategory), global::Msyrpc.StateCategory.Parser, new[]{ "Id", "Name", "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdateCategoryStateRequest), global::Msyrpc.UpdateCategoryStateRequest.Parser, new[]{ "UpdatedCategories" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.UpdateCategoryStateResponse), global::Msyrpc.UpdateCategoryStateResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AllStateCategoryTypesRequest), global::Msyrpc.AllStateCategoryTypesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AllStateCategoryTypesResponse), global::Msyrpc.AllStateCategoryTypesResponse.Parser, new[]{ "CategoryDaily", "CategoryMondayAndThursday", "CategoryTuesdayAndFriday", "CategoryWednesdayAndSaturday", "CategoryUnassigned" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.CategoryMargin), global::Msyrpc.CategoryMargin.Parser, new[]{ "Target", "Start", "End" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetCategoryMarginRequest), global::Msyrpc.GetCategoryMarginRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetCategoryMarginResponseItem), global::Msyrpc.GetCategoryMarginResponseItem.Parser, new[]{ "Id", "Name", "Margin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.GetCategoryMarginResponse), global::Msyrpc.GetCategoryMarginResponse.Parser, new[]{ "CategoryMargins" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AddCategoryMarginRequest), global::Msyrpc.AddCategoryMarginRequest.Parser, new[]{ "Category", "PriceRangeStart", "PriceRangeEnd", "Margin", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.AddCategoryMarginResponse), global::Msyrpc.AddCategoryMarginResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.DeleteCategoryMarginRequest), global::Msyrpc.DeleteCategoryMarginRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msyrpc.DeleteCategoryMarginResponse), global::Msyrpc.DeleteCategoryMarginResponse.Parser, new[]{ "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Competitor : pb::IMessage<Competitor> {
    private static readonly pb::MessageParser<Competitor> _parser = new pb::MessageParser<Competitor>(() => new Competitor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Competitor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Competitor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Competitor(Competitor other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      tier_ = other.tier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Competitor Clone() {
      return new Competitor(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 3;
    private string tier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tier {
      get { return tier_; }
      set {
        tier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Competitor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Competitor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Tier != other.Tier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Tier.Length != 0) hash ^= Tier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Tier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Tier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Tier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Competitor other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Tier.Length != 0) {
        Tier = other.Tier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Tier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Category : pb::IMessage<Category> {
    private static readonly pb::MessageParser<Category> _parser = new pb::MessageParser<Category>(() => new Category());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Category> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Category() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Category(Category other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Category Clone() {
      return new Category(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Category);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Category other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Category other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompetitorPrice : pb::IMessage<CompetitorPrice> {
    private static readonly pb::MessageParser<CompetitorPrice> _parser = new pb::MessageParser<CompetitorPrice>(() => new CompetitorPrice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompetitorPrice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompetitorPrice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompetitorPrice(CompetitorPrice other) : this() {
      name_ = other.name_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompetitorPrice Clone() {
      return new CompetitorPrice(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompetitorPrice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompetitorPrice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Price != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompetitorPrice other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Price = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Product : pb::IMessage<Product> {
    private static readonly pb::MessageParser<Product> _parser = new pb::MessageParser<Product>(() => new Product());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Product> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product(Product other) : this() {
      id_ = other.id_;
      productCode_ = other.productCode_;
      productDescription_ = other.productDescription_;
      keywords_ = other.keywords_;
      costPrice_ = other.costPrice_;
      salesPrice_ = other.salesPrice_;
      competitorPrices_ = other.competitorPrices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product Clone() {
      return new Product(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "productCode" field.</summary>
    public const int ProductCodeFieldNumber = 2;
    private string productCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductCode {
      get { return productCode_; }
      set {
        productCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "productDescription" field.</summary>
    public const int ProductDescriptionFieldNumber = 3;
    private string productDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductDescription {
      get { return productDescription_; }
      set {
        productDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 4;
    private string keywords_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "costPrice" field.</summary>
    public const int CostPriceFieldNumber = 5;
    private double costPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CostPrice {
      get { return costPrice_; }
      set {
        costPrice_ = value;
      }
    }

    /// <summary>Field number for the "salesPrice" field.</summary>
    public const int SalesPriceFieldNumber = 6;
    private double salesPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SalesPrice {
      get { return salesPrice_; }
      set {
        salesPrice_ = value;
      }
    }

    /// <summary>Field number for the "competitorPrices" field.</summary>
    public const int CompetitorPricesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Msyrpc.CompetitorPrice> _repeated_competitorPrices_codec
        = pb::FieldCodec.ForMessage(58, global::Msyrpc.CompetitorPrice.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.CompetitorPrice> competitorPrices_ = new pbc::RepeatedField<global::Msyrpc.CompetitorPrice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.CompetitorPrice> CompetitorPrices {
      get { return competitorPrices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Product);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Product other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProductCode != other.ProductCode) return false;
      if (ProductDescription != other.ProductDescription) return false;
      if (Keywords != other.Keywords) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CostPrice, other.CostPrice)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SalesPrice, other.SalesPrice)) return false;
      if(!competitorPrices_.Equals(other.competitorPrices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ProductCode.Length != 0) hash ^= ProductCode.GetHashCode();
      if (ProductDescription.Length != 0) hash ^= ProductDescription.GetHashCode();
      if (Keywords.Length != 0) hash ^= Keywords.GetHashCode();
      if (CostPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CostPrice);
      if (SalesPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SalesPrice);
      hash ^= competitorPrices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ProductCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductCode);
      }
      if (ProductDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProductDescription);
      }
      if (Keywords.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Keywords);
      }
      if (CostPrice != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CostPrice);
      }
      if (SalesPrice != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(SalesPrice);
      }
      competitorPrices_.WriteTo(output, _repeated_competitorPrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ProductCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductCode);
      }
      if (ProductDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductDescription);
      }
      if (Keywords.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Keywords);
      }
      if (CostPrice != 0D) {
        size += 1 + 8;
      }
      if (SalesPrice != 0D) {
        size += 1 + 8;
      }
      size += competitorPrices_.CalculateSize(_repeated_competitorPrices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Product other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ProductCode.Length != 0) {
        ProductCode = other.ProductCode;
      }
      if (other.ProductDescription.Length != 0) {
        ProductDescription = other.ProductDescription;
      }
      if (other.Keywords.Length != 0) {
        Keywords = other.Keywords;
      }
      if (other.CostPrice != 0D) {
        CostPrice = other.CostPrice;
      }
      if (other.SalesPrice != 0D) {
        SalesPrice = other.SalesPrice;
      }
      competitorPrices_.Add(other.competitorPrices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ProductCode = input.ReadString();
            break;
          }
          case 26: {
            ProductDescription = input.ReadString();
            break;
          }
          case 34: {
            Keywords = input.ReadString();
            break;
          }
          case 41: {
            CostPrice = input.ReadDouble();
            break;
          }
          case 49: {
            SalesPrice = input.ReadDouble();
            break;
          }
          case 58: {
            competitorPrices_.AddEntriesFrom(input, _repeated_competitorPrices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllCategoryTypesRequest : pb::IMessage<GetAllCategoryTypesRequest> {
    private static readonly pb::MessageParser<GetAllCategoryTypesRequest> _parser = new pb::MessageParser<GetAllCategoryTypesRequest>(() => new GetAllCategoryTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllCategoryTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCategoryTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCategoryTypesRequest(GetAllCategoryTypesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCategoryTypesRequest Clone() {
      return new GetAllCategoryTypesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllCategoryTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllCategoryTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllCategoryTypesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllCompetitorTypesRequest : pb::IMessage<GetAllCompetitorTypesRequest> {
    private static readonly pb::MessageParser<GetAllCompetitorTypesRequest> _parser = new pb::MessageParser<GetAllCompetitorTypesRequest>(() => new GetAllCompetitorTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllCompetitorTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCompetitorTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCompetitorTypesRequest(GetAllCompetitorTypesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllCompetitorTypesRequest Clone() {
      return new GetAllCompetitorTypesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllCompetitorTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllCompetitorTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllCompetitorTypesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllNewCategoryTypesRequest : pb::IMessage<GetAllNewCategoryTypesRequest> {
    private static readonly pb::MessageParser<GetAllNewCategoryTypesRequest> _parser = new pb::MessageParser<GetAllNewCategoryTypesRequest>(() => new GetAllNewCategoryTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllNewCategoryTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllNewCategoryTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllNewCategoryTypesRequest(GetAllNewCategoryTypesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllNewCategoryTypesRequest Clone() {
      return new GetAllNewCategoryTypesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllNewCategoryTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllNewCategoryTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllNewCategoryTypesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetProductComparisonRequest : pb::IMessage<GetProductComparisonRequest> {
    private static readonly pb::MessageParser<GetProductComparisonRequest> _parser = new pb::MessageParser<GetProductComparisonRequest>(() => new GetProductComparisonRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProductComparisonRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProductComparisonRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProductComparisonRequest(GetProductComparisonRequest other) : this() {
      categoryTypes_ = other.categoryTypes_.Clone();
      competitorsTypes_ = other.competitorsTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProductComparisonRequest Clone() {
      return new GetProductComparisonRequest(this);
    }

    /// <summary>Field number for the "categoryTypes" field.</summary>
    public const int CategoryTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_categoryTypes_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> categoryTypes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CategoryTypes {
      get { return categoryTypes_; }
    }

    /// <summary>Field number for the "competitorsTypes" field.</summary>
    public const int CompetitorsTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_competitorsTypes_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> competitorsTypes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CompetitorsTypes {
      get { return competitorsTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProductComparisonRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProductComparisonRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!categoryTypes_.Equals(other.categoryTypes_)) return false;
      if(!competitorsTypes_.Equals(other.competitorsTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= categoryTypes_.GetHashCode();
      hash ^= competitorsTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      categoryTypes_.WriteTo(output, _repeated_categoryTypes_codec);
      competitorsTypes_.WriteTo(output, _repeated_competitorsTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += categoryTypes_.CalculateSize(_repeated_categoryTypes_codec);
      size += competitorsTypes_.CalculateSize(_repeated_competitorsTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProductComparisonRequest other) {
      if (other == null) {
        return;
      }
      categoryTypes_.Add(other.categoryTypes_);
      competitorsTypes_.Add(other.competitorsTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            categoryTypes_.AddEntriesFrom(input, _repeated_categoryTypes_codec);
            break;
          }
          case 18:
          case 16: {
            competitorsTypes_.AddEntriesFrom(input, _repeated_competitorsTypes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateProductDescriptionRequest : pb::IMessage<UpdateProductDescriptionRequest> {
    private static readonly pb::MessageParser<UpdateProductDescriptionRequest> _parser = new pb::MessageParser<UpdateProductDescriptionRequest>(() => new UpdateProductDescriptionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateProductDescriptionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProductDescriptionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProductDescriptionRequest(UpdateProductDescriptionRequest other) : this() {
      productCode_ = other.productCode_;
      updatedDescription_ = other.updatedDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProductDescriptionRequest Clone() {
      return new UpdateProductDescriptionRequest(this);
    }

    /// <summary>Field number for the "productCode" field.</summary>
    public const int ProductCodeFieldNumber = 1;
    private string productCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductCode {
      get { return productCode_; }
      set {
        productCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updatedDescription" field.</summary>
    public const int UpdatedDescriptionFieldNumber = 2;
    private string updatedDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedDescription {
      get { return updatedDescription_; }
      set {
        updatedDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateProductDescriptionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateProductDescriptionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductCode != other.ProductCode) return false;
      if (UpdatedDescription != other.UpdatedDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductCode.Length != 0) hash ^= ProductCode.GetHashCode();
      if (UpdatedDescription.Length != 0) hash ^= UpdatedDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductCode);
      }
      if (UpdatedDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UpdatedDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductCode);
      }
      if (UpdatedDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateProductDescriptionRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProductCode.Length != 0) {
        ProductCode = other.ProductCode;
      }
      if (other.UpdatedDescription.Length != 0) {
        UpdatedDescription = other.UpdatedDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductCode = input.ReadString();
            break;
          }
          case 18: {
            UpdatedDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CategoryData : pb::IMessage<CategoryData> {
    private static readonly pb::MessageParser<CategoryData> _parser = new pb::MessageParser<CategoryData>(() => new CategoryData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryData(CategoryData other) : this() {
      type_ = other.type_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryData Clone() {
      return new CategoryData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msyrpc.Category> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::Msyrpc.Category.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Category> data_ = new pbc::RepeatedField<global::Msyrpc.Category>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Category> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryData other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllNewCategoryTypesResponse : pb::IMessage<AllNewCategoryTypesResponse> {
    private static readonly pb::MessageParser<AllNewCategoryTypesResponse> _parser = new pb::MessageParser<AllNewCategoryTypesResponse>(() => new AllNewCategoryTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllNewCategoryTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllNewCategoryTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllNewCategoryTypesResponse(AllNewCategoryTypesResponse other) : this() {
      category_ = other.category_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllNewCategoryTypesResponse Clone() {
      return new AllNewCategoryTypesResponse(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.CategoryData> _repeated_category_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.CategoryData.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.CategoryData> category_ = new pbc::RepeatedField<global::Msyrpc.CategoryData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.CategoryData> Category {
      get { return category_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllNewCategoryTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllNewCategoryTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!category_.Equals(other.category_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= category_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      category_.WriteTo(output, _repeated_category_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += category_.CalculateSize(_repeated_category_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllNewCategoryTypesResponse other) {
      if (other == null) {
        return;
      }
      category_.Add(other.category_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            category_.AddEntriesFrom(input, _repeated_category_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllCategoryTypesResponse : pb::IMessage<AllCategoryTypesResponse> {
    private static readonly pb::MessageParser<AllCategoryTypesResponse> _parser = new pb::MessageParser<AllCategoryTypesResponse>(() => new AllCategoryTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllCategoryTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllCategoryTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllCategoryTypesResponse(AllCategoryTypesResponse other) : this() {
      categoryDaily_ = other.categoryDaily_.Clone();
      categoryMondayAndThursday_ = other.categoryMondayAndThursday_.Clone();
      categoryTuesdayAndFriday_ = other.categoryTuesdayAndFriday_.Clone();
      categoryWednesdayAndSaturday_ = other.categoryWednesdayAndSaturday_.Clone();
      categoryUnassigned_ = other.categoryUnassigned_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllCategoryTypesResponse Clone() {
      return new AllCategoryTypesResponse(this);
    }

    /// <summary>Field number for the "categoryDaily" field.</summary>
    public const int CategoryDailyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.Category> _repeated_categoryDaily_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.Category.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Category> categoryDaily_ = new pbc::RepeatedField<global::Msyrpc.Category>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Category> CategoryDaily {
      get { return categoryDaily_; }
    }

    /// <summary>Field number for the "categoryMondayAndThursday" field.</summary>
    public const int CategoryMondayAndThursdayFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msyrpc.Category> _repeated_categoryMondayAndThursday_codec
        = pb::FieldCodec.ForMessage(18, global::Msyrpc.Category.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Category> categoryMondayAndThursday_ = new pbc::RepeatedField<global::Msyrpc.Category>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Category> CategoryMondayAndThursday {
      get { return categoryMondayAndThursday_; }
    }

    /// <summary>Field number for the "categoryTuesdayAndFriday" field.</summary>
    public const int CategoryTuesdayAndFridayFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msyrpc.Category> _repeated_categoryTuesdayAndFriday_codec
        = pb::FieldCodec.ForMessage(26, global::Msyrpc.Category.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Category> categoryTuesdayAndFriday_ = new pbc::RepeatedField<global::Msyrpc.Category>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Category> CategoryTuesdayAndFriday {
      get { return categoryTuesdayAndFriday_; }
    }

    /// <summary>Field number for the "categoryWednesdayAndSaturday" field.</summary>
    public const int CategoryWednesdayAndSaturdayFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msyrpc.Category> _repeated_categoryWednesdayAndSaturday_codec
        = pb::FieldCodec.ForMessage(34, global::Msyrpc.Category.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Category> categoryWednesdayAndSaturday_ = new pbc::RepeatedField<global::Msyrpc.Category>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Category> CategoryWednesdayAndSaturday {
      get { return categoryWednesdayAndSaturday_; }
    }

    /// <summary>Field number for the "categoryUnassigned" field.</summary>
    public const int CategoryUnassignedFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msyrpc.Category> _repeated_categoryUnassigned_codec
        = pb::FieldCodec.ForMessage(42, global::Msyrpc.Category.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Category> categoryUnassigned_ = new pbc::RepeatedField<global::Msyrpc.Category>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Category> CategoryUnassigned {
      get { return categoryUnassigned_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllCategoryTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllCategoryTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!categoryDaily_.Equals(other.categoryDaily_)) return false;
      if(!categoryMondayAndThursday_.Equals(other.categoryMondayAndThursday_)) return false;
      if(!categoryTuesdayAndFriday_.Equals(other.categoryTuesdayAndFriday_)) return false;
      if(!categoryWednesdayAndSaturday_.Equals(other.categoryWednesdayAndSaturday_)) return false;
      if(!categoryUnassigned_.Equals(other.categoryUnassigned_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= categoryDaily_.GetHashCode();
      hash ^= categoryMondayAndThursday_.GetHashCode();
      hash ^= categoryTuesdayAndFriday_.GetHashCode();
      hash ^= categoryWednesdayAndSaturday_.GetHashCode();
      hash ^= categoryUnassigned_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      categoryDaily_.WriteTo(output, _repeated_categoryDaily_codec);
      categoryMondayAndThursday_.WriteTo(output, _repeated_categoryMondayAndThursday_codec);
      categoryTuesdayAndFriday_.WriteTo(output, _repeated_categoryTuesdayAndFriday_codec);
      categoryWednesdayAndSaturday_.WriteTo(output, _repeated_categoryWednesdayAndSaturday_codec);
      categoryUnassigned_.WriteTo(output, _repeated_categoryUnassigned_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += categoryDaily_.CalculateSize(_repeated_categoryDaily_codec);
      size += categoryMondayAndThursday_.CalculateSize(_repeated_categoryMondayAndThursday_codec);
      size += categoryTuesdayAndFriday_.CalculateSize(_repeated_categoryTuesdayAndFriday_codec);
      size += categoryWednesdayAndSaturday_.CalculateSize(_repeated_categoryWednesdayAndSaturday_codec);
      size += categoryUnassigned_.CalculateSize(_repeated_categoryUnassigned_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllCategoryTypesResponse other) {
      if (other == null) {
        return;
      }
      categoryDaily_.Add(other.categoryDaily_);
      categoryMondayAndThursday_.Add(other.categoryMondayAndThursday_);
      categoryTuesdayAndFriday_.Add(other.categoryTuesdayAndFriday_);
      categoryWednesdayAndSaturday_.Add(other.categoryWednesdayAndSaturday_);
      categoryUnassigned_.Add(other.categoryUnassigned_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            categoryDaily_.AddEntriesFrom(input, _repeated_categoryDaily_codec);
            break;
          }
          case 18: {
            categoryMondayAndThursday_.AddEntriesFrom(input, _repeated_categoryMondayAndThursday_codec);
            break;
          }
          case 26: {
            categoryTuesdayAndFriday_.AddEntriesFrom(input, _repeated_categoryTuesdayAndFriday_codec);
            break;
          }
          case 34: {
            categoryWednesdayAndSaturday_.AddEntriesFrom(input, _repeated_categoryWednesdayAndSaturday_codec);
            break;
          }
          case 42: {
            categoryUnassigned_.AddEntriesFrom(input, _repeated_categoryUnassigned_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllCompetitorTypesResponse : pb::IMessage<AllCompetitorTypesResponse> {
    private static readonly pb::MessageParser<AllCompetitorTypesResponse> _parser = new pb::MessageParser<AllCompetitorTypesResponse>(() => new AllCompetitorTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllCompetitorTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllCompetitorTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllCompetitorTypesResponse(AllCompetitorTypesResponse other) : this() {
      competitorsTierOne_ = other.competitorsTierOne_.Clone();
      competitorsTierTwo_ = other.competitorsTierTwo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllCompetitorTypesResponse Clone() {
      return new AllCompetitorTypesResponse(this);
    }

    /// <summary>Field number for the "competitorsTierOne" field.</summary>
    public const int CompetitorsTierOneFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.Competitor> _repeated_competitorsTierOne_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.Competitor.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Competitor> competitorsTierOne_ = new pbc::RepeatedField<global::Msyrpc.Competitor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Competitor> CompetitorsTierOne {
      get { return competitorsTierOne_; }
    }

    /// <summary>Field number for the "competitorsTierTwo" field.</summary>
    public const int CompetitorsTierTwoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msyrpc.Competitor> _repeated_competitorsTierTwo_codec
        = pb::FieldCodec.ForMessage(18, global::Msyrpc.Competitor.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Competitor> competitorsTierTwo_ = new pbc::RepeatedField<global::Msyrpc.Competitor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Competitor> CompetitorsTierTwo {
      get { return competitorsTierTwo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllCompetitorTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllCompetitorTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!competitorsTierOne_.Equals(other.competitorsTierOne_)) return false;
      if(!competitorsTierTwo_.Equals(other.competitorsTierTwo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= competitorsTierOne_.GetHashCode();
      hash ^= competitorsTierTwo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      competitorsTierOne_.WriteTo(output, _repeated_competitorsTierOne_codec);
      competitorsTierTwo_.WriteTo(output, _repeated_competitorsTierTwo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += competitorsTierOne_.CalculateSize(_repeated_competitorsTierOne_codec);
      size += competitorsTierTwo_.CalculateSize(_repeated_competitorsTierTwo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllCompetitorTypesResponse other) {
      if (other == null) {
        return;
      }
      competitorsTierOne_.Add(other.competitorsTierOne_);
      competitorsTierTwo_.Add(other.competitorsTierTwo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            competitorsTierOne_.AddEntriesFrom(input, _repeated_competitorsTierOne_codec);
            break;
          }
          case 18: {
            competitorsTierTwo_.AddEntriesFrom(input, _repeated_competitorsTierTwo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProductComparisonResponse : pb::IMessage<ProductComparisonResponse> {
    private static readonly pb::MessageParser<ProductComparisonResponse> _parser = new pb::MessageParser<ProductComparisonResponse>(() => new ProductComparisonResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductComparisonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductComparisonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductComparisonResponse(ProductComparisonResponse other) : this() {
      productComparison_ = other.productComparison_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductComparisonResponse Clone() {
      return new ProductComparisonResponse(this);
    }

    /// <summary>Field number for the "productComparison" field.</summary>
    public const int ProductComparisonFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.Product> _repeated_productComparison_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.Product.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.Product> productComparison_ = new pbc::RepeatedField<global::Msyrpc.Product>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.Product> ProductComparison {
      get { return productComparison_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductComparisonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductComparisonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productComparison_.Equals(other.productComparison_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productComparison_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      productComparison_.WriteTo(output, _repeated_productComparison_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += productComparison_.CalculateSize(_repeated_productComparison_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductComparisonResponse other) {
      if (other == null) {
        return;
      }
      productComparison_.Add(other.productComparison_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            productComparison_.AddEntriesFrom(input, _repeated_productComparison_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateProductDescriptionResponse : pb::IMessage<UpdateProductDescriptionResponse> {
    private static readonly pb::MessageParser<UpdateProductDescriptionResponse> _parser = new pb::MessageParser<UpdateProductDescriptionResponse>(() => new UpdateProductDescriptionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateProductDescriptionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProductDescriptionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProductDescriptionResponse(UpdateProductDescriptionResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProductDescriptionResponse Clone() {
      return new UpdateProductDescriptionResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateProductDescriptionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateProductDescriptionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateProductDescriptionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///manage competitors component
  /// </summary>
  public sealed partial class UpdatedCompetitor : pb::IMessage<UpdatedCompetitor> {
    private static readonly pb::MessageParser<UpdatedCompetitor> _parser = new pb::MessageParser<UpdatedCompetitor>(() => new UpdatedCompetitor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatedCompetitor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatedCompetitor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatedCompetitor(UpdatedCompetitor other) : this() {
      competitorId_ = other.competitorId_;
      updatedTier_ = other.updatedTier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatedCompetitor Clone() {
      return new UpdatedCompetitor(this);
    }

    /// <summary>Field number for the "competitorId" field.</summary>
    public const int CompetitorIdFieldNumber = 1;
    private int competitorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompetitorId {
      get { return competitorId_; }
      set {
        competitorId_ = value;
      }
    }

    /// <summary>Field number for the "updatedTier" field.</summary>
    public const int UpdatedTierFieldNumber = 2;
    private string updatedTier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedTier {
      get { return updatedTier_; }
      set {
        updatedTier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatedCompetitor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatedCompetitor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompetitorId != other.CompetitorId) return false;
      if (UpdatedTier != other.UpdatedTier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompetitorId != 0) hash ^= CompetitorId.GetHashCode();
      if (UpdatedTier.Length != 0) hash ^= UpdatedTier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompetitorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CompetitorId);
      }
      if (UpdatedTier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UpdatedTier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompetitorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompetitorId);
      }
      if (UpdatedTier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedTier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatedCompetitor other) {
      if (other == null) {
        return;
      }
      if (other.CompetitorId != 0) {
        CompetitorId = other.CompetitorId;
      }
      if (other.UpdatedTier.Length != 0) {
        UpdatedTier = other.UpdatedTier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CompetitorId = input.ReadInt32();
            break;
          }
          case 18: {
            UpdatedTier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCompetitorTierRequest : pb::IMessage<UpdateCompetitorTierRequest> {
    private static readonly pb::MessageParser<UpdateCompetitorTierRequest> _parser = new pb::MessageParser<UpdateCompetitorTierRequest>(() => new UpdateCompetitorTierRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCompetitorTierRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompetitorTierRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompetitorTierRequest(UpdateCompetitorTierRequest other) : this() {
      updatedCompetitor_ = other.updatedCompetitor_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompetitorTierRequest Clone() {
      return new UpdateCompetitorTierRequest(this);
    }

    /// <summary>Field number for the "updatedCompetitor" field.</summary>
    public const int UpdatedCompetitorFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.UpdatedCompetitor> _repeated_updatedCompetitor_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.UpdatedCompetitor.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.UpdatedCompetitor> updatedCompetitor_ = new pbc::RepeatedField<global::Msyrpc.UpdatedCompetitor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.UpdatedCompetitor> UpdatedCompetitor {
      get { return updatedCompetitor_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCompetitorTierRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCompetitorTierRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!updatedCompetitor_.Equals(other.updatedCompetitor_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= updatedCompetitor_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      updatedCompetitor_.WriteTo(output, _repeated_updatedCompetitor_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += updatedCompetitor_.CalculateSize(_repeated_updatedCompetitor_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCompetitorTierRequest other) {
      if (other == null) {
        return;
      }
      updatedCompetitor_.Add(other.updatedCompetitor_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            updatedCompetitor_.AddEntriesFrom(input, _repeated_updatedCompetitor_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCompetitorRequest : pb::IMessage<DeleteCompetitorRequest> {
    private static readonly pb::MessageParser<DeleteCompetitorRequest> _parser = new pb::MessageParser<DeleteCompetitorRequest>(() => new DeleteCompetitorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCompetitorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompetitorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompetitorRequest(DeleteCompetitorRequest other) : this() {
      competitorId_ = other.competitorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompetitorRequest Clone() {
      return new DeleteCompetitorRequest(this);
    }

    /// <summary>Field number for the "competitorId" field.</summary>
    public const int CompetitorIdFieldNumber = 1;
    private int competitorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompetitorId {
      get { return competitorId_; }
      set {
        competitorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCompetitorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCompetitorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompetitorId != other.CompetitorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompetitorId != 0) hash ^= CompetitorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompetitorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CompetitorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompetitorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompetitorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCompetitorRequest other) {
      if (other == null) {
        return;
      }
      if (other.CompetitorId != 0) {
        CompetitorId = other.CompetitorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CompetitorId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddCompetitorRequest : pb::IMessage<AddCompetitorRequest> {
    private static readonly pb::MessageParser<AddCompetitorRequest> _parser = new pb::MessageParser<AddCompetitorRequest>(() => new AddCompetitorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddCompetitorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCompetitorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCompetitorRequest(AddCompetitorRequest other) : this() {
      name_ = other.name_;
      tier_ = other.tier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCompetitorRequest Clone() {
      return new AddCompetitorRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 2;
    private string tier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tier {
      get { return tier_; }
      set {
        tier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddCompetitorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddCompetitorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Tier != other.Tier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Tier.Length != 0) hash ^= Tier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Tier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Tier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddCompetitorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Tier.Length != 0) {
        Tier = other.Tier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Tier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCompetitorTierResponse : pb::IMessage<UpdateCompetitorTierResponse> {
    private static readonly pb::MessageParser<UpdateCompetitorTierResponse> _parser = new pb::MessageParser<UpdateCompetitorTierResponse>(() => new UpdateCompetitorTierResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCompetitorTierResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompetitorTierResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompetitorTierResponse(UpdateCompetitorTierResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCompetitorTierResponse Clone() {
      return new UpdateCompetitorTierResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCompetitorTierResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCompetitorTierResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCompetitorTierResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCompetitorResponse : pb::IMessage<DeleteCompetitorResponse> {
    private static readonly pb::MessageParser<DeleteCompetitorResponse> _parser = new pb::MessageParser<DeleteCompetitorResponse>(() => new DeleteCompetitorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCompetitorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompetitorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompetitorResponse(DeleteCompetitorResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCompetitorResponse Clone() {
      return new DeleteCompetitorResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCompetitorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCompetitorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCompetitorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddCompetitorResponse : pb::IMessage<AddCompetitorResponse> {
    private static readonly pb::MessageParser<AddCompetitorResponse> _parser = new pb::MessageParser<AddCompetitorResponse>(() => new AddCompetitorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddCompetitorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCompetitorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCompetitorResponse(AddCompetitorResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCompetitorResponse Clone() {
      return new AddCompetitorResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddCompetitorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddCompetitorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddCompetitorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StateCategory : pb::IMessage<StateCategory> {
    private static readonly pb::MessageParser<StateCategory> _parser = new pb::MessageParser<StateCategory>(() => new StateCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateCategory(StateCategory other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      category_ = other.category_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateCategory Clone() {
      return new StateCategory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Category != other.Category) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateCategory other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Category = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCategoryStateRequest : pb::IMessage<UpdateCategoryStateRequest> {
    private static readonly pb::MessageParser<UpdateCategoryStateRequest> _parser = new pb::MessageParser<UpdateCategoryStateRequest>(() => new UpdateCategoryStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCategoryStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCategoryStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCategoryStateRequest(UpdateCategoryStateRequest other) : this() {
      updatedCategories_ = other.updatedCategories_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCategoryStateRequest Clone() {
      return new UpdateCategoryStateRequest(this);
    }

    /// <summary>Field number for the "updatedCategories" field.</summary>
    public const int UpdatedCategoriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.StateCategory> _repeated_updatedCategories_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.StateCategory.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.StateCategory> updatedCategories_ = new pbc::RepeatedField<global::Msyrpc.StateCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.StateCategory> UpdatedCategories {
      get { return updatedCategories_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCategoryStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCategoryStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!updatedCategories_.Equals(other.updatedCategories_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= updatedCategories_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      updatedCategories_.WriteTo(output, _repeated_updatedCategories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += updatedCategories_.CalculateSize(_repeated_updatedCategories_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCategoryStateRequest other) {
      if (other == null) {
        return;
      }
      updatedCategories_.Add(other.updatedCategories_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            updatedCategories_.AddEntriesFrom(input, _repeated_updatedCategories_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCategoryStateResponse : pb::IMessage<UpdateCategoryStateResponse> {
    private static readonly pb::MessageParser<UpdateCategoryStateResponse> _parser = new pb::MessageParser<UpdateCategoryStateResponse>(() => new UpdateCategoryStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCategoryStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCategoryStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCategoryStateResponse(UpdateCategoryStateResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCategoryStateResponse Clone() {
      return new UpdateCategoryStateResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCategoryStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCategoryStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCategoryStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllStateCategoryTypesRequest : pb::IMessage<AllStateCategoryTypesRequest> {
    private static readonly pb::MessageParser<AllStateCategoryTypesRequest> _parser = new pb::MessageParser<AllStateCategoryTypesRequest>(() => new AllStateCategoryTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllStateCategoryTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllStateCategoryTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllStateCategoryTypesRequest(AllStateCategoryTypesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllStateCategoryTypesRequest Clone() {
      return new AllStateCategoryTypesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllStateCategoryTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllStateCategoryTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllStateCategoryTypesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AllStateCategoryTypesResponse : pb::IMessage<AllStateCategoryTypesResponse> {
    private static readonly pb::MessageParser<AllStateCategoryTypesResponse> _parser = new pb::MessageParser<AllStateCategoryTypesResponse>(() => new AllStateCategoryTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllStateCategoryTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllStateCategoryTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllStateCategoryTypesResponse(AllStateCategoryTypesResponse other) : this() {
      categoryDaily_ = other.categoryDaily_.Clone();
      categoryMondayAndThursday_ = other.categoryMondayAndThursday_.Clone();
      categoryTuesdayAndFriday_ = other.categoryTuesdayAndFriday_.Clone();
      categoryWednesdayAndSaturday_ = other.categoryWednesdayAndSaturday_.Clone();
      categoryUnassigned_ = other.categoryUnassigned_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllStateCategoryTypesResponse Clone() {
      return new AllStateCategoryTypesResponse(this);
    }

    /// <summary>Field number for the "categoryDaily" field.</summary>
    public const int CategoryDailyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.StateCategory> _repeated_categoryDaily_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.StateCategory.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.StateCategory> categoryDaily_ = new pbc::RepeatedField<global::Msyrpc.StateCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.StateCategory> CategoryDaily {
      get { return categoryDaily_; }
    }

    /// <summary>Field number for the "categoryMondayAndThursday" field.</summary>
    public const int CategoryMondayAndThursdayFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Msyrpc.StateCategory> _repeated_categoryMondayAndThursday_codec
        = pb::FieldCodec.ForMessage(18, global::Msyrpc.StateCategory.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.StateCategory> categoryMondayAndThursday_ = new pbc::RepeatedField<global::Msyrpc.StateCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.StateCategory> CategoryMondayAndThursday {
      get { return categoryMondayAndThursday_; }
    }

    /// <summary>Field number for the "categoryTuesdayAndFriday" field.</summary>
    public const int CategoryTuesdayAndFridayFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msyrpc.StateCategory> _repeated_categoryTuesdayAndFriday_codec
        = pb::FieldCodec.ForMessage(26, global::Msyrpc.StateCategory.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.StateCategory> categoryTuesdayAndFriday_ = new pbc::RepeatedField<global::Msyrpc.StateCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.StateCategory> CategoryTuesdayAndFriday {
      get { return categoryTuesdayAndFriday_; }
    }

    /// <summary>Field number for the "categoryWednesdayAndSaturday" field.</summary>
    public const int CategoryWednesdayAndSaturdayFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Msyrpc.StateCategory> _repeated_categoryWednesdayAndSaturday_codec
        = pb::FieldCodec.ForMessage(34, global::Msyrpc.StateCategory.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.StateCategory> categoryWednesdayAndSaturday_ = new pbc::RepeatedField<global::Msyrpc.StateCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.StateCategory> CategoryWednesdayAndSaturday {
      get { return categoryWednesdayAndSaturday_; }
    }

    /// <summary>Field number for the "categoryUnassigned" field.</summary>
    public const int CategoryUnassignedFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Msyrpc.StateCategory> _repeated_categoryUnassigned_codec
        = pb::FieldCodec.ForMessage(42, global::Msyrpc.StateCategory.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.StateCategory> categoryUnassigned_ = new pbc::RepeatedField<global::Msyrpc.StateCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.StateCategory> CategoryUnassigned {
      get { return categoryUnassigned_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllStateCategoryTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllStateCategoryTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!categoryDaily_.Equals(other.categoryDaily_)) return false;
      if(!categoryMondayAndThursday_.Equals(other.categoryMondayAndThursday_)) return false;
      if(!categoryTuesdayAndFriday_.Equals(other.categoryTuesdayAndFriday_)) return false;
      if(!categoryWednesdayAndSaturday_.Equals(other.categoryWednesdayAndSaturday_)) return false;
      if(!categoryUnassigned_.Equals(other.categoryUnassigned_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= categoryDaily_.GetHashCode();
      hash ^= categoryMondayAndThursday_.GetHashCode();
      hash ^= categoryTuesdayAndFriday_.GetHashCode();
      hash ^= categoryWednesdayAndSaturday_.GetHashCode();
      hash ^= categoryUnassigned_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      categoryDaily_.WriteTo(output, _repeated_categoryDaily_codec);
      categoryMondayAndThursday_.WriteTo(output, _repeated_categoryMondayAndThursday_codec);
      categoryTuesdayAndFriday_.WriteTo(output, _repeated_categoryTuesdayAndFriday_codec);
      categoryWednesdayAndSaturday_.WriteTo(output, _repeated_categoryWednesdayAndSaturday_codec);
      categoryUnassigned_.WriteTo(output, _repeated_categoryUnassigned_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += categoryDaily_.CalculateSize(_repeated_categoryDaily_codec);
      size += categoryMondayAndThursday_.CalculateSize(_repeated_categoryMondayAndThursday_codec);
      size += categoryTuesdayAndFriday_.CalculateSize(_repeated_categoryTuesdayAndFriday_codec);
      size += categoryWednesdayAndSaturday_.CalculateSize(_repeated_categoryWednesdayAndSaturday_codec);
      size += categoryUnassigned_.CalculateSize(_repeated_categoryUnassigned_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllStateCategoryTypesResponse other) {
      if (other == null) {
        return;
      }
      categoryDaily_.Add(other.categoryDaily_);
      categoryMondayAndThursday_.Add(other.categoryMondayAndThursday_);
      categoryTuesdayAndFriday_.Add(other.categoryTuesdayAndFriday_);
      categoryWednesdayAndSaturday_.Add(other.categoryWednesdayAndSaturday_);
      categoryUnassigned_.Add(other.categoryUnassigned_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            categoryDaily_.AddEntriesFrom(input, _repeated_categoryDaily_codec);
            break;
          }
          case 18: {
            categoryMondayAndThursday_.AddEntriesFrom(input, _repeated_categoryMondayAndThursday_codec);
            break;
          }
          case 26: {
            categoryTuesdayAndFriday_.AddEntriesFrom(input, _repeated_categoryTuesdayAndFriday_codec);
            break;
          }
          case 34: {
            categoryWednesdayAndSaturday_.AddEntriesFrom(input, _repeated_categoryWednesdayAndSaturday_codec);
            break;
          }
          case 42: {
            categoryUnassigned_.AddEntriesFrom(input, _repeated_categoryUnassigned_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///category margin
  /// </summary>
  public sealed partial class CategoryMargin : pb::IMessage<CategoryMargin> {
    private static readonly pb::MessageParser<CategoryMargin> _parser = new pb::MessageParser<CategoryMargin>(() => new CategoryMargin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryMargin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMargin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMargin(CategoryMargin other) : this() {
      target_ = other.target_;
      start_ = other.start_;
      end_ = other.end_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryMargin Clone() {
      return new CategoryMargin(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private float target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private int end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryMargin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryMargin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Target, other.Target)) return false;
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Target != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Target);
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Target != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Target);
      }
      if (Start != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Target != 0F) {
        size += 1 + 4;
      }
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryMargin other) {
      if (other == null) {
        return;
      }
      if (other.Target != 0F) {
        Target = other.Target;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Target = input.ReadFloat();
            break;
          }
          case 16: {
            Start = input.ReadInt32();
            break;
          }
          case 24: {
            End = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCategoryMarginRequest : pb::IMessage<GetCategoryMarginRequest> {
    private static readonly pb::MessageParser<GetCategoryMarginRequest> _parser = new pb::MessageParser<GetCategoryMarginRequest>(() => new GetCategoryMarginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCategoryMarginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginRequest(GetCategoryMarginRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginRequest Clone() {
      return new GetCategoryMarginRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCategoryMarginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCategoryMarginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCategoryMarginRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetCategoryMarginResponseItem : pb::IMessage<GetCategoryMarginResponseItem> {
    private static readonly pb::MessageParser<GetCategoryMarginResponseItem> _parser = new pb::MessageParser<GetCategoryMarginResponseItem>(() => new GetCategoryMarginResponseItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCategoryMarginResponseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginResponseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginResponseItem(GetCategoryMarginResponseItem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      margin_ = other.margin_ != null ? other.margin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginResponseItem Clone() {
      return new GetCategoryMarginResponseItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 3;
    private global::Msyrpc.CategoryMargin margin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Msyrpc.CategoryMargin Margin {
      get { return margin_; }
      set {
        margin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCategoryMarginResponseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCategoryMarginResponseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Margin, other.Margin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (margin_ != null) hash ^= Margin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (margin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Margin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (margin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Margin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCategoryMarginResponseItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.margin_ != null) {
        if (margin_ == null) {
          margin_ = new global::Msyrpc.CategoryMargin();
        }
        Margin.MergeFrom(other.Margin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (margin_ == null) {
              margin_ = new global::Msyrpc.CategoryMargin();
            }
            input.ReadMessage(margin_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCategoryMarginResponse : pb::IMessage<GetCategoryMarginResponse> {
    private static readonly pb::MessageParser<GetCategoryMarginResponse> _parser = new pb::MessageParser<GetCategoryMarginResponse>(() => new GetCategoryMarginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCategoryMarginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginResponse(GetCategoryMarginResponse other) : this() {
      categoryMargins_ = other.categoryMargins_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCategoryMarginResponse Clone() {
      return new GetCategoryMarginResponse(this);
    }

    /// <summary>Field number for the "categoryMargins" field.</summary>
    public const int CategoryMarginsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msyrpc.GetCategoryMarginResponseItem> _repeated_categoryMargins_codec
        = pb::FieldCodec.ForMessage(10, global::Msyrpc.GetCategoryMarginResponseItem.Parser);
    private readonly pbc::RepeatedField<global::Msyrpc.GetCategoryMarginResponseItem> categoryMargins_ = new pbc::RepeatedField<global::Msyrpc.GetCategoryMarginResponseItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Msyrpc.GetCategoryMarginResponseItem> CategoryMargins {
      get { return categoryMargins_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCategoryMarginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCategoryMarginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!categoryMargins_.Equals(other.categoryMargins_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= categoryMargins_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      categoryMargins_.WriteTo(output, _repeated_categoryMargins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += categoryMargins_.CalculateSize(_repeated_categoryMargins_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCategoryMarginResponse other) {
      if (other == null) {
        return;
      }
      categoryMargins_.Add(other.categoryMargins_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            categoryMargins_.AddEntriesFrom(input, _repeated_categoryMargins_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddCategoryMarginRequest : pb::IMessage<AddCategoryMarginRequest> {
    private static readonly pb::MessageParser<AddCategoryMarginRequest> _parser = new pb::MessageParser<AddCategoryMarginRequest>(() => new AddCategoryMarginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddCategoryMarginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCategoryMarginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCategoryMarginRequest(AddCategoryMarginRequest other) : this() {
      category_ = other.category_;
      priceRangeStart_ = other.priceRangeStart_;
      priceRangeEnd_ = other.priceRangeEnd_;
      margin_ = other.margin_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCategoryMarginRequest Clone() {
      return new AddCategoryMarginRequest(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private string category_ = "";
    /// <summary>
    ///competitor id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priceRangeStart" field.</summary>
    public const int PriceRangeStartFieldNumber = 2;
    private int priceRangeStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriceRangeStart {
      get { return priceRangeStart_; }
      set {
        priceRangeStart_ = value;
      }
    }

    /// <summary>Field number for the "priceRangeEnd" field.</summary>
    public const int PriceRangeEndFieldNumber = 3;
    private int priceRangeEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriceRangeEnd {
      get { return priceRangeEnd_; }
      set {
        priceRangeEnd_ = value;
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 4;
    private float margin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Margin {
      get { return margin_; }
      set {
        margin_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddCategoryMarginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddCategoryMarginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if (PriceRangeStart != other.PriceRangeStart) return false;
      if (PriceRangeEnd != other.PriceRangeEnd) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Margin, other.Margin)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (PriceRangeStart != 0) hash ^= PriceRangeStart.GetHashCode();
      if (PriceRangeEnd != 0) hash ^= PriceRangeEnd.GetHashCode();
      if (Margin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Margin);
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Category.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Category);
      }
      if (PriceRangeStart != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PriceRangeStart);
      }
      if (PriceRangeEnd != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PriceRangeEnd);
      }
      if (Margin != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Margin);
      }
      if (Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (PriceRangeStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceRangeStart);
      }
      if (PriceRangeEnd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceRangeEnd);
      }
      if (Margin != 0F) {
        size += 1 + 4;
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddCategoryMarginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.PriceRangeStart != 0) {
        PriceRangeStart = other.PriceRangeStart;
      }
      if (other.PriceRangeEnd != 0) {
        PriceRangeEnd = other.PriceRangeEnd;
      }
      if (other.Margin != 0F) {
        Margin = other.Margin;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Category = input.ReadString();
            break;
          }
          case 16: {
            PriceRangeStart = input.ReadInt32();
            break;
          }
          case 24: {
            PriceRangeEnd = input.ReadInt32();
            break;
          }
          case 37: {
            Margin = input.ReadFloat();
            break;
          }
          case 40: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddCategoryMarginResponse : pb::IMessage<AddCategoryMarginResponse> {
    private static readonly pb::MessageParser<AddCategoryMarginResponse> _parser = new pb::MessageParser<AddCategoryMarginResponse>(() => new AddCategoryMarginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddCategoryMarginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCategoryMarginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCategoryMarginResponse(AddCategoryMarginResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCategoryMarginResponse Clone() {
      return new AddCategoryMarginResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddCategoryMarginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddCategoryMarginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddCategoryMarginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCategoryMarginRequest : pb::IMessage<DeleteCategoryMarginRequest> {
    private static readonly pb::MessageParser<DeleteCategoryMarginRequest> _parser = new pb::MessageParser<DeleteCategoryMarginRequest>(() => new DeleteCategoryMarginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCategoryMarginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCategoryMarginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCategoryMarginRequest(DeleteCategoryMarginRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCategoryMarginRequest Clone() {
      return new DeleteCategoryMarginRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///competitor id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCategoryMarginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCategoryMarginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCategoryMarginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCategoryMarginResponse : pb::IMessage<DeleteCategoryMarginResponse> {
    private static readonly pb::MessageParser<DeleteCategoryMarginResponse> _parser = new pb::MessageParser<DeleteCategoryMarginResponse>(() => new DeleteCategoryMarginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCategoryMarginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msyrpc.PricecomparisonReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCategoryMarginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCategoryMarginResponse(DeleteCategoryMarginResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCategoryMarginResponse Clone() {
      return new DeleteCategoryMarginResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCategoryMarginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCategoryMarginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCategoryMarginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
